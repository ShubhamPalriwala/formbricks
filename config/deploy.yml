# Name of your application. Used to uniquely configure containers.
service: formbricks-kamal

# Name of the container image.
image: laalshaitaan/formbricks

# Deploy to these servers.
servers:
  - 18.196.187.144

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: laalshaitaan

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  # clear:
  #   DB_HOST: 192.168.0.2
  secret:
    - WEBAPP_URL
    - DATABASE_URL
    - NEXTAUTH_SECRET
    - ENCRYPTION_KEY
    - SHORT_URL_BASE
    - MAIL_FROM
    - SMTP_HOST
    - SMTP_PORT
    - SMTP_SECURE_ENABLED
    - SMTP_USER
    - SMTP_PASSWORD
    - EMAIL_VERIFICATION_DISABLED
    - PASSWORD_RESET_DISABLED
    - SIGNUP_DISABLED
    - EMAIL_AUTH_DISABLED
    - INVITE_DISABLED
    - PRIVACY_URL
    - TERMS_URL
    - IMPRINT_URL
    - GITHUB_ID
    - GITHUB_SECRET
    - GOOGLE_CLIENT_ID
    - GOOGLE_CLIENT_SECRET
    - AZUREAD_CLIENT_ID
    - AZUREAD_CLIENT_SECRET
    - AZUREAD_TENANT_ID
    - OIDC_CLIENT_ID
    - OIDC_CLIENT_SECRET
    - OIDC_ISSUER
    - OIDC_DISPLAY_NAME
    - OIDC_SIGNING_ALGORITHM
    - CRON_SECRET
    - ASSET_PREFIX_URL
    - NOTION_OAUTH_CLIENT_ID
    - NOTION_OAUTH_CLIENT_SECRET
    - STRIPE_SECRET_KEY
    - STRIPE_WEBHOOK_SECRET
    - GOOGLE_SHEETS_CLIENT_ID
    - GOOGLE_SHEETS_CLIENT_SECRET
    - GOOGLE_SHEETS_REDIRECT_URL
    - AIRTABLE_CLIENT_ID
    - ENTERPRISE_LICENSE_KEY
    - DEFAULT_TEAM_ID
    - DEFAULT_TEAM_ROLE
    - ONBOARDING_DISABLED
    - CUSTOMER_IO_API_KEY
    - CUSTOMER_IO_SITE_ID
    - RATE_LIMITING_DISABLED
    - NEXT_PUBLIC_POSTHOG_API_KEY
    - NEXT_PUBLIC_POSTHOG_API_HOST
    - NEXT_PUBLIC_FORMBRICKS_API_HOST
    - NEXT_PUBLIC_FORMBRICKS_ENVIRONMENT_ID
    - NEXT_PUBLIC_FORMBRICKS_ONBOARDING_SURVEY_ID

# Use a different ssh user than root
ssh:
  user: ubuntu

# Configure builder setup.
builder:
  context: .
  dockerfile: ./apps/web/Dockerfile
  args:
    - DATABASE_URL
    - NEXTAUTH_SECRET
    - ENCRYPTION_KEY
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

healthcheck:
  path: /health
  port: 3000
  max_attempts: 7
  interval: 20s

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false
